/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //Recursive Solution 
public class Solution {
    List<Integer> ls = new LinkedList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
        if (root == null) return ls;
        ls.add(root.val);
        preorderTraversal(root.left);
         preorderTraversal(root.right);
         return ls;
    }
}

//Iterative Solution 

public class Solution {
    List<Integer> ls = new LinkedList<>();
    Stack<TreeNode> st = new Stack<TreeNode>();
    public List<Integer> preorderTraversal(TreeNode root) {
        if (root == null) return ls;
        
     
        
        st.push(root);
       
        while(!st.isEmpty()){
          TreeNode  temp = st.pop();
             ls.add(temp.val);
              if(temp.right!= null){
         
         st.push(temp.right);
             }
             if(temp.left!= null){
       
        st.push(temp.left);
             }
        
        }
    
         return ls;
    }
}
