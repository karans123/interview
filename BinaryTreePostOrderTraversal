/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //Recursive Solution 
public class Solution {
    List<Integer> ls = new LinkedList<>();
    public List<Integer> preorderTraversal(TreeNode root) {
        if (root == null) return ls;
     
        preorderTraversal(root.left);
         preorderTraversal(root.right);
            ls.add(root.val);
         return ls;
    }
}


// Iterative Solution 

public List<Integer> postorderTraversal(TreeNode root) {
    Stack<TreeNode> st=new Stack<>();
    List<Integer> ans=new ArrayList<>();
    if(root==null) return ans;
    st.push(root);
    TreeNode pre=root;
    TreeNode cur=root;
    while(!st.isEmpty())
    {
        pre=cur;
        cur=st.peek();
        if((cur.left!=null||cur.right!=null)&&(pre!=cur.left&&pre!=cur.right))
        {
            if(cur.right!=null) st.push(cur.right);
            if(cur.left!=null)  st.push(cur.left);
        }
        else
        {
            ans.add(st.pop().val);
        }
    }
    return ans;
}


//Recursive Solution 


