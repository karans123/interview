
/*
 * 
 * You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.

 Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.

input@ {2,1,2,4}
output :6
 */

public class HouseRobber {

	public static void main(String[] args) {
		int nums[] = { 2, 1, 2, 4 };
		System.out.println(rob(nums));
	}

	public static int rob(int[] nums) {

		if (nums == null || nums.length == 0)
			return 0;

		int previousRobbed = 0;
		int previousNotRobbed = 0;

		// there are two possiblity that we did not robbed or robbed that house
		for (int i = 0; i < nums.length; i++) {

			// first we will take currentHouse Not Robbed
			int CurrentNotRobbed = Math.max(previousRobbed, previousNotRobbed);
			// if Current House is robbed
			int CurrentRobbed = previousNotRobbed + nums[i];
			// update values for Next Iteration
			previousRobbed = CurrentRobbed;
			previousNotRobbed = CurrentNotRobbed;
		}
		// return max from both robbed and didnot Robbed
		return Math.max(previousRobbed, previousNotRobbed);
	}

}
