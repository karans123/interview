/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
      TreeNode prev = null;
    public boolean isValidBST(TreeNode root) {
        if(root == null) return true;
        //Traverse in Inorder Fashion 
        if(!isValidBST(root.left)){
            return false; 
        }
      
        
        if(prev != null && root.val <= prev.val){
            return false;
        }
        prev = root;
        
      return  isValidBST(root.right);
    
    }
}



public class Solution {
    public boolean isValidBST(TreeNode root) {
    
    
    return isValidBST(root, Long.MIN_VALUE , Long.MAX_VALUE);
    
    
}

private boolean isValidBST(TreeNode root, long min, long max) {
	
 if(root == null) return true ;
 
if(root.val <= min || root.val >= max){
	 return false;
 }
	return isValidBST(root.left, min, root.val) && isValidBST(root.right, root.val, max);
}
}
