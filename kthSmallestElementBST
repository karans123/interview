/**
 * Definition for a binary tree node.
 
 using Inorder Traversal of the tree 
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    int count = 0 ;
    int res= 0;
    public int kthSmallest(TreeNode root, int k) {
        
        if(root == null ) return 0;
        
        if(count < k && root.left != null ){
            
              kthSmallest( root.left, k);
        }
        if(++count == k){
            res =  root.val;
        }
        
          if(count < k && root.right != null ){
            
           kthSmallest( root.right, k);
        }
        return res;
    }
}


//for largest kth element you need to first traverse to right then check for count the in the left side of the tree 
